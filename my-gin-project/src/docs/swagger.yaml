basePath: /
definitions:
  controllers.AIMessage:
    properties:
      text:
        example: Bonjour, raconte-moi une blague.
        type: string
      user:
        example: Alice
        type: string
    type: object
  controllers.AIResponse:
    properties:
      bot:
        example: Voici une blague...
        type: string
    type: object
  controllers.Message:
    properties:
      text:
        type: string
      user:
        type: string
    type: object
  controllers.Response:
    properties:
      bot:
        type: string
    type: object
  models.Item:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  models.User:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API pour gérer des items et l'authentification JWT.
  title: My Gin API
  version: "1.0"
paths:
  /chat:
    post:
      consumes:
      - application/json
      description: Envoie un message au bot et reçoit une réponse
      parameters:
      - description: Message de l'utilisateur
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/controllers.Message'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Chat avec le bot
      tags:
      - Chatbot
  /chat-ai:
    post:
      consumes:
      - application/json
      description: Envoie un message au modèle IA exécuté dans Docker (Ollama)
      parameters:
      - description: Message de l'utilisateur
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/controllers.AIMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AIResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Chat avec modèle IA local
      tags:
      - Chatbot
  /items:
    get:
      description: Retrieve list of items (protected route)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Add a new item
      parameters:
      - description: Item info
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new item
      tags:
      - items
  /items/{id}:
    delete:
      description: Delete an item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete an item
      tags:
      - items
    get:
      description: Retrieve a single item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get item by ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update item details
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item info
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an item
      tags:
      - items
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user with username and password
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
